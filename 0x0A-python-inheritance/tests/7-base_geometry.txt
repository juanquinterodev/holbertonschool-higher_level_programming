# 7-base_geometry.txt
===============================
 Test cases
===============================

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

===============================

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", 0)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

    >>> bg.integer_validator("", [0])
    Traceback (most recent call last):
    TypeError:  must be an integer

    >>> bg.integer_validator("Freud", {'0'})
    Traceback (most recent call last):
    TypeError: Freud must be an integer

    >>> bg.integer_validator("Neg", -7)
    Traceback (most recent call last):
    ValueError: Neg must be greater than 0

    >>> bg.integer_validator("Pos", )
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator('age', 'Ten')
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator('age', (2,))
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator('age', None)
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator('age', True)
    Traceback (most recent call last):
    TypeError: age must be an integer
