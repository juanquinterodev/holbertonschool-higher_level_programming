# 2-matrix_divided.txt

 How to Use 2-matrix_divided.py
===============================

Only has one function called
``matrix_divided()``.

Non messages
=======

``matrix_divided()`` Divide all elements of a matrix

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix1 = [[3.5, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix1, 3)
    [[1.17, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix_divided(matrix1, 10)
    [[0.35, 0.2, 0.3], [0.4, 0.5, 0.6]]
    >>> matrix_divided(matrix1, -2)
    [[-1.75, -1.0, -1.5], [-2.0, -2.5, -3.0]]
    >>> matrix2 = [[30, 67.5, -43.1], [9, 10.8, 65]]
    >>> matrix_divided(matrix2, 4.7)
    [[6.38, 14.36, -9.17], [1.91, 2.3, 13.83]]

Raise error
===========

Raise error message if one of the variables are not integers or
floats

::

    >>> matrix_divided([['Z', 1, 2], [3, 4, 5]], 8)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[44.5, 9, 1], [3, 9.7, 5]], 'B')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[5, 56, 7], [12, 7, 66]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix = [[15, 64, 87], [8, 7]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
