# 0-add_integer.txt
How to use 0-add_integer.py
This library is very simple, since it only has one function called "add_integer".
Numbers
"add integer" returns the sum of its arguments. For integers or floats, that value is equivalent to using the "+" operator.
::
>>>add_integer = __import__('0-add_integer').add_integer
>>>add_integer(1, 2)
3
>>>add_integer(-2, 8)
6
>>>add_integer(25, -5)
20
>>>add_integer(-20, -5)
-25
It also works with floating-point values.
::
>>>add_integer(3.0, 3)
6
Non numbers
Raise error message in case that one of the variables are not integers or floats
::
>>>add_integer('g', 8)
Traceback (most recent call last):
TypeError: a must be an integer

>>>add_integer("Hello", 6)
Traceback (most recent call last):
TypeError: a must be an integer)

>>>add_integer(4, "world")
Traceback (most recent call last):
TypeError: b must be an integer

>>>add_integer(80, 'H')
Traceback (most recent call last)
TypeError: b must be an integer)

>>>add_integer()
Traceback (most recent call last)
TypeError: add_integer() missing 1 required argument: 'a'

>>>add_integer(none)
Traceback (most recent call last)
TypeError: a must be an integer

>>>add_integer('Michael', 'Jackson')
Traceback: (most recent call last):
TypeError: a must be an integer

>>> add_integer (1)
99


